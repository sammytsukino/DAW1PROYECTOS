<?xml version="1.0" encoding="UTF-8"?>
<templates>
    
    <!-- Template para el menú con Switch Case -->
    <template 
        name="MenuSwitchCase" 
        description="Menú interactivo con opciones para leer, agregar, filtrar y ordenar líneas en el archivo" 
        context="java" 
        enabled="true">
        <![CDATA[
        Scanner scanner = new Scanner(System.in);
        int opcion = 0;
        
        while (opcion != 5) {
            System.out.println("1. Leer archivo");
            System.out.println("2. Agregar línea");
            System.out.println("3. Filtrar líneas");
            System.out.println("4. Ordenar líneas");
            System.out.println("5. Salir");
            System.out.print("Seleccione una opción: ");
            opcion = scanner.nextInt();
            scanner.nextLine(); // Limpiar el buffer del scanner

            switch (opcion) {
                case 1: {
                    leerArchivo();
                    break;
                }
                case 2: {
                    agregarLinea(scanner);
                    break;
                }
                case 3: {
                    filtrarLineas(scanner);
                    break;
                }
                case 4: {
                    ordenarLineas();
                    break;
                }
                default:
                    System.out.println("Opción no válida");
            }
        }
        scanner.close();
        ]]>
    </template>

    <!-- Template para leer archivo -->
    <template 
        name="LeerArchivo" 
        description="Lee el archivo de texto y lo muestra por consola" 
        context="java" 
        enabled="true">
        <![CDATA[
        try (BufferedReader br = Files.newBufferedReader(Paths.get(ARCHIVO), Charset.forName("UTF-8"))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                System.out.println(linea);
            }
        } catch (IOException e) {
            System.out.println("Error al leer el archivo: " + e.getMessage());
        }
        ]]>
    </template>

    <!-- Template para agregar línea al archivo -->
    <template 
        name="AgregarLinea" 
        description="Solicita al usuario ingresar nombre, edad y departamento para agregar al archivo" 
        context="java" 
        enabled="true">
        <![CDATA[
        try (FileWriter fw = new FileWriter(ARCHIVO, true);
             BufferedWriter bw = new BufferedWriter(fw);
             PrintWriter pw = new PrintWriter(bw)) {

            System.out.print("Ingrese nombre: ");
            String nombre = scanner.nextLine();
            System.out.print("Ingrese edad: ");
            int edad = scanner.nextInt();
            scanner.nextLine(); // Limpiar el buffer
            System.out.print("Ingrese departamento: ");
            String departamento = scanner.nextLine();

            pw.println(nombre + "," + edad + "," + departamento);
            System.out.println("Línea agregada correctamente.");
        } catch (IOException e) {
            System.out.println("Error al escribir en el archivo: " + e.getMessage());
        }
        ]]>
    </template>

    <!-- Template para filtrar líneas del archivo -->
    <template 
        name="FiltrarLineas" 
        description="Filtra las líneas del archivo que contienen un departamento específico" 
        context="java" 
        enabled="true">
        <![CDATA[
        System.out.print("Ingrese el departamento a filtrar: ");
        String filtro = scanner.nextLine();

        try (BufferedReader br = Files.newBufferedReader(Paths.get(ARCHIVO), Charset.forName("UTF-8"))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                if (linea.contains(filtro)) {
                    System.out.println(linea);
                }
            }
        } catch (IOException e) {
            System.out.println("Error al leer el archivo: " + e.getMessage());
        }
        ]]>
    </template>

    <!-- Template para ordenar las líneas del archivo -->
    <template 
        name="OrdenarLineas" 
        description="Ordena las líneas del archivo alfabéticamente" 
        context="java" 
        enabled="true">
        <![CDATA[
        ArrayList<String> lineas = new ArrayList<>();
        
        try (BufferedReader br = Files.newBufferedReader(Paths.get(ARCHIVO), Charset.forName("UTF-8"))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                lineas.add(linea);
            }

            Collections.sort(lineas);

            try (BufferedWriter bw = new BufferedWriter(new FileWriter(ARCHIVO))) {
                for (String l : lineas) {
                    bw.write(l);
                    bw.newLine();
                }
            }
            System.out.println("Archivo ordenado correctamente.");

        } catch (IOException e) {
            System.out.println("Error al procesar el archivo: " + e.getMessage());
        }
        ]]>
    </template>

</templates>
