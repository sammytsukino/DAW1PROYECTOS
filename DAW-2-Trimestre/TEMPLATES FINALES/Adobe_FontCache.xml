<?xml version="1.0" encoding="UTF-8"?>
<templates>

    <!-- Template para validar una dirección de email -->
    <template 
        name="ValidarEmail" 
        description="Valida si un email tiene el formato correcto usando expresiones regulares" 
        context="java" 
        enabled="true">
        <![CDATA[
        String email = "usuario@example.com";
        String regex = "^[\\w.-]+@[a-zA-Z\\d.-]+\\.[a-zA-Z]{2,6}$";
        
        if (email.matches(regex)) {
            System.out.println("El email es válido.");
        } else {
            System.out.println("El email no es válido.");
        }
        ]]>
    </template>

    <!-- Template para extraer todos los números de una cadena -->
    <template 
        name="ExtraerNumeros" 
        description="Extrae todos los números de una cadena usando expresiones regulares" 
        context="java" 
        enabled="true">
        <![CDATA[
        String texto = "El precio es de 150 euros y el descuento es de 20%";
        Pattern pattern = Pattern.compile("\\d+");
        Matcher matcher = pattern.matcher(texto);

        while (matcher.find()) {
            System.out.println("Número encontrado: " + matcher.group());
        }
        ]]>
    </template>

    <!-- Template para reemplazar palabras en una cadena -->
    <template 
        name="ReemplazarTexto" 
        description="Reemplaza todas las ocurrencias de una palabra en una cadena con otra palabra" 
        context="java" 
        enabled="true">
        <![CDATA[
        String texto = "Java es genial, me encanta programar en Java";
        String nuevoTexto = texto.replaceAll("\\bJava\\b", "Python");
        System.out.println(nuevoTexto);
        ]]>
    </template>

    <!-- Template para validar una contraseña segura -->
    <template 
        name="ValidarContrasena" 
        description="Verifica si una contraseña es segura según ciertos criterios con regex" 
        context="java" 
        enabled="true">
        <![CDATA[
        String contrasena = "Abcde123!";
        String regex = "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$%^&+=!]).{8,}$";
        
        if (contrasena.matches(regex)) {
            System.out.println("Contraseña válida.");
        } else {
            System.out.println("Contraseña inválida. Debe tener al menos 8 caracteres, una mayúscula, una minúscula, un número y un carácter especial.");
        }
        ]]>
    </template>

    <!-- Template para dividir una cadena usando un delimitador -->
    <template 
        name="DividirCadena" 
        description="Divide una cadena en partes usando un delimitador específico con regex" 
        context="java" 
        enabled="true">
        <![CDATA[
        String lista = "manzana,pera,plátano,naranja";
        String[] elementos = lista.split("\\s*,\\s*"); // Elimina espacios innecesarios
        
        for (String elemento : elementos) {
            System.out.println(elemento);
        }
        ]]>
    </template>

</templates>
